# from pptx import Presentation
# from pptx.util import Inches, Pt
# from pptx.dml.color import RGBColor

# def generate_slides(summary_text, topic, bullets_per_slide=5):
#     prs = Presentation()

#     # Title Slide
#     title_slide_layout = prs.slide_layouts[0]
#     slide = prs.slides.add_slide(title_slide_layout)
#     slide.shapes.title.text = topic
#     slide.placeholders[1].text = "An Overview"

#     # Prepare bullet points
#     bullet_points = [line.strip("-â€¢ \n") for line in summary_text.split('\n') if line.strip()]

#     # Create slides with bullet points
#     content_slide_layout = prs.slide_layouts[1]
#     for i in range(0, len(bullet_points), bullets_per_slide):
#         slide = prs.slides.add_slide(content_slide_layout)
#         slide.shapes.title.text = f"{topic} (Part {i // bullets_per_slide + 1})"
#         content = slide.placeholders[1]
#         text_frame = content.text_frame
#         text_frame.clear()

#         for bullet in bullet_points[i:i+bullets_per_slide]:
#             p = text_frame.add_paragraph()
#             p.text = bullet
#             p.level = 0
#             p.font.size = Pt(18)

#     # Add footer to each slide
#     for slide in prs.slides:
#         textbox = slide.shapes.add_textbox(Inches(0.5), Inches(6.8), Inches(9), Inches(0.5))
#         tf = textbox.text_frame
#         p = tf.paragraphs[0]
#         p.text = "Generated by AI Task Automator"
#         p.font.size = Pt(10)
#         p.font.italic = True
#         p.font.color.rgb = RGBColor(120, 120, 120)

#     # Save presentation
#     file_path = f"{topic.replace(' ', '_')}.pptx"
#     prs.save(file_path)
#     return file_path

from pptx import Presentation
from pptx.util import Inches, Pt
from pptx.dml.color import RGBColor
from pptx.enum.text import PP_ALIGN
from pptx.enum.shapes import MSO_SHAPE
import textwrap
import os

def split_into_bullets(text, max_len=150):
    import re
    sentences = re.split(r'(?<=[.!?]) +', text.strip())
    bullets = []
    for sentence in sentences:
        if len(sentence) <= max_len:
            bullets.append(sentence.strip())
        else:
            wrapped = textwrap.wrap(sentence, width=max_len)
            bullets.extend(wrapped)
    return [b for b in bullets if b]

def set_background_color(slide, color_rgb=(240, 248, 255)):  # Alice Blue
    background = slide.background
    fill = background.fill
    fill.solid()
    fill.fore_color.rgb = RGBColor(*color_rgb)

def generate_slides(summary_text, topic, bullets_per_slide=5, cover_image=None):
    prs = Presentation()
    bullet_points = split_into_bullets(summary_text)

    # --- Title Slide ---
    title_layout = prs.slide_layouts[6]  # blank layout
    slide = prs.slides.add_slide(title_layout)
    set_background_color(slide, (200, 230, 255))  # light blue

    # Optional background image
    if cover_image and os.path.exists(cover_image):
        slide.shapes.add_picture(cover_image, 0, 0, prs.slide_width, prs.slide_height)

    # Title Text
    title_box = slide.shapes.add_textbox(Inches(1), Inches(2), Inches(8), Inches(2))
    tf = title_box.text_frame
    p = tf.add_paragraph()
    p.text = topic
    p.font.size = Pt(44)
    p.font.bold = True
    p.font.color.rgb = RGBColor(0, 51, 102)  # Navy Blue
    p.alignment = PP_ALIGN.CENTER

    # Subtitle
    subtitle = slide.shapes.add_textbox(Inches(1), Inches(4), Inches(8), Inches(1))
    tf = subtitle.text_frame
    p = tf.add_paragraph()
    p.text = "AI-Generated Insights for Students"
    p.font.size = Pt(24)
    p.font.italic = True
    p.font.color.rgb = RGBColor(60, 60, 60)
    p.alignment = PP_ALIGN.CENTER

    # --- Content Slides ---
    content_layout = prs.slide_layouts[1]
    for i in range(0, len(bullet_points), bullets_per_slide):
        slide = prs.slides.add_slide(content_layout)
        set_background_color(slide, (245, 245, 245))  # light grey

        title_shape = slide.shapes.title
        body_shape = slide.placeholders[1]
        title_shape.text = f" slide {i // bullets_per_slide + 1} - {topic}"

        text_frame = body_shape.text_frame
        text_frame.clear()

        for bullet in bullet_points[i:i+bullets_per_slide]:
            p = text_frame.add_paragraph()
            p.text = bullet
            p.level = 0
            p.font.size = Pt(20)
            p.font.name = 'Segoe UI'
            p.font.color.rgb = RGBColor(0, 0, 0)

    # --- Thank You Slide ---
    slide = prs.slides.add_slide(prs.slide_layouts[6])
    set_background_color(slide, (220, 240, 220))  # greenish
    thank_you = slide.shapes.add_textbox(Inches(2), Inches(3), Inches(6), Inches(2))
    tf = thank_you.text_frame
    p = tf.paragraphs[0]
    p.text = "Thank You!\nJai Jagannath"
    p.font.size = Pt(36)
    p.font.bold = True
    p.font.color.rgb = RGBColor(0, 102, 51)
    p.alignment = PP_ALIGN.CENTER

    # --- Footer on All Slides ---
    for slide in prs.slides:
        footer = slide.shapes.add_textbox(Inches(0.5), Inches(7), Inches(9), Inches(0.3))
        tf = footer.text_frame
        p = tf.paragraphs[0]
        p.text = "Generated by AI Task Automator"
        p.font.size = Pt(10)
        p.font.italic = True
        p.font.color.rgb = RGBColor(100, 100, 100)

    # --- Save ---
    file_path = f"{topic.replace(' ', '_')}_styled.pptx"
    prs.save(file_path)
    return file_path